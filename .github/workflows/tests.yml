name: Check Folder Changes

on: [push]

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_folders: ${{ steps.check_changes.outputs.changed_folders }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch all history for all branches and tags
        run: git fetch --prune --unshallow

      - name: Determine the commit range
        id: commit_range
        run: |
          # Get the previous commit (if this is not the first push)
          previous_commit=$(git rev-parse HEAD~1)
          current_commit=$(git rev-parse HEAD)

          echo "previous_commit=$previous_commit" >> $GITHUB_ENV
          echo "current_commit=$current_commit" >> $GITHUB_ENV

      - name: Check for folder changes
        id: check_changes
        run: |
          # List of folders to check
          folders=("CommonMessages" "Logger" "RedisClient" "RabbitMqClient" "Supervision")
          
          # Initialize a variable to hold changed folders
          changed_folders=""

          # Log the commit range
          echo "Checking changes between commits $previous_commit and $current_commit"

          # Check if any of the folders have changed
          for folder in "${folders[@]}"; do
            if git diff --name-only $previous_commit $current_commit | grep -q "^$folder/"; then
              echo "$folder has changed"
              changed_folders+="$folder "
            fi
          done

          # Save the changed folders to be used in the next step
          echo "::set-output name=changed_folders::$changed_folders"

  create-jobs:
    needs: determine-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.determine-changes.outputs.changed_folders) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run npm test
        if: matrix.folder != ''
        run: |
          echo "Running npm test in ${{ matrix.folder }}"
          cd ${{ matrix.folder }}
          npm install
          npm run test

  coverage:
    needs: determine-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.determine-changes.outputs.changed_folders) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run npm coverage
        if: matrix.folder != ''
        run: |
          echo "Running npm coverage in ${{ matrix.folder }}"
          cd ${{ matrix.folder }}
          npm install
          npm run coverage
