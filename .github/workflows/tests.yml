name: Check Folder Changes

on: [push]

jobs:
  check-folder-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_folders: ${{ steps.set_output.outputs.changed_folders }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch all history for all branches and tags
      run: git fetch --prune --unshallow

    - name: Determine the commit range
      id: commit_range
      run: |
        # Get the previous commit (if this is not the first push)
        previous_commit=$(git rev-parse HEAD~1)
        current_commit=$(git rev-parse HEAD)

        echo "previous_commit=$previous_commit" >> $GITHUB_ENV
        echo "current_commit=$current_commit" >> $GITHUB_ENV

    - name: Check for folder changes
      id: check_changes
      run: |
        # List of folders to check
        folders=("CommonMessages" "Logger" "RedisClient" "RabbitMqClient" "Supervision")
        
        # Initialize a variable to hold changed folders
        changed_folders="[]"

        # Log the commit range
        echo "Checking changes between commits $previous_commit and $current_commit"

        # Check if any of the folders have changed
        for folder in "${folders[@]}"; do
          if git diff --name-only $previous_commit $current_commit | grep -q "^$folder/"; then
            echo "$folder has changed"
            changed_folders=$(echo $changed_folders | jq ". + [\"$folder\"]")
          fi
        done

        # Save the changed folders to be used in the next step
        echo "changed_folders=$changed_folders" >> $GITHUB_ENV
        echo "::set-output name=changed_folders::$changed_folders"

    - name: Log changed folders
      run: |
        if [ "$changed_folders" != "[]" ]; then
          echo "The following folders have changed: $changed_folders"
        else
          echo "No specified folders have changed."
        fi
      env:
        changed_folders: ${{ env.changed_folders }}

  test-folders:
    needs: check-folder-changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.check-folder-changes.outputs.changed_folders) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run npm commands
      run: |
        echo "Running npm commands in ${{ matrix.folder }}"
        cd ${{ matrix.folder }}
        npm install
        npm run test
        npm run coverage

