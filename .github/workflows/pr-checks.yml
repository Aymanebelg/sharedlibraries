name: Quality Assurance GitHub Actions Workflow

on:
  pull_request:
    branches: [development]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch all history for all branches and tags
      run: |
        if [ $(git rev-parse --is-shallow-repository) == "true" ]; then
          git fetch --prune --unshallow
        else
          git fetch --prune
        fi

    - name: Determine the commit range
      id: commit_range
      run: |
        if [ "$GITHUB_BASE_REF" != "" ]; then
          previous_commit=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
        else
          previous_commit=$(git rev-parse HEAD~1)
        fi
        current_commit=$(git rev-parse HEAD)

        echo "previous_commit=$previous_commit" >> $GITHUB_ENV
        echo "current_commit=$current_commit" >> $GITHUB_ENV

        echo "Previous commit: $previous_commit"
        echo "Current commit: $current_commit"

    - name: Check for folder changes and run tests
      run: |
        echo "Checking changes between commits $previous_commit and $current_commit"
        changed_folders=$(git diff --name-only $previous_commit $current_commit | grep '/' | cut -d'/' -f1 | sort -u)
        if [ -z "$changed_folders" ]; then
          echo "No folder changes detected."
          exit 0
        fi
        for folder in $changed_folders; do
          echo "$folder has changed"
          echo "Running npm test in $folder"
          cd $folder
          npm install
          npm run test
          cd ..
        done

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 20

    - name: Fetch all history for all branches and tags
      run: |
        if [ $(git rev-parse --is-shallow-repository) == "true" ]; then
          git fetch --prune --unshallow
        else
          git fetch --prune
        fi

    - name: Determine the commit range
      id: commit_range
      run: |
        if [ "$GITHUB_BASE_REF" != "" ]; then
          previous_commit=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
        else
          previous_commit=$(git rev-parse HEAD~1)
        fi
        current_commit=$(git rev-parse HEAD)

        echo "previous_commit=$previous_commit" >> $GITHUB_ENV
        echo "current_commit=$current_commit" >> $GITHUB_ENV

        echo "Previous commit: $previous_commit"
        echo "Current commit: $current_commit"

    - name: Check for folder changes and run coverage
      run: |
        echo "Checking changes between commits $previous_commit and $current_commit"
        changed_folders=$(git diff --name-only $previous_commit $current_commit | grep '/' | cut -d'/' -f1 | sort -u)
        if [ -z "$changed_folders" ]; then
          echo "No folder changes detected."
          exit 0
        fi
        for folder in $changed_folders; do
          echo "$folder has changed"
          echo "Running npm coverage in $folder"
          cd $folder
          npm install
          npm run coverage
          cd ..
       

        done
        
  check-pr-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check Title Format
        uses: deepakputhraya/action-pr-title@master
        with:
          regex: '^(feat|fix|refactor|docs|test):\s\[\w+-\d+\]\s.+$'
          github_token: ${{ secrets.GITHUB_TOKEN }}
