name: Quality Assurance GitHub Actions Workflow

on:
  pull_request:
    branches: [development]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch list of changed files
      id: changed_files
      run: |
        changed_files=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/files" \
          | jq -r '.[].filename')
        echo "changed_files=$changed_files" >> $GITHUB_ENV

    - name: Determine changed folders
      id: determine_folders
      run: |
        changed_folders=$(echo "${{ env.changed_files }}" | grep -o '^[^/]*' | uniq)
        echo "changed_folders=$changed_folders" >> $GITHUB_ENV

    - name: Run npm test in changed folders
      run: |
        for folder in ${{ env.changed_folders }}; do
          echo "$folder has changed"
          echo "Running npm test in $folder"
          cd $folder
          npm install
          npm run test
          cd ..
        done

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch list of changed files
      id: changed_files
      run: |
        changed_files=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/files" \
          | jq -r '.[].filename')
        echo "changed_files=$changed_files" >> $GITHUB_ENV

    - name: Determine changed folders
      id: determine_folders
      run: |
        changed_folders=$(echo "${{ env.changed_files }}" | grep -o '^[^/]*' | uniq)
        echo "changed_folders=$changed_folders" >> $GITHUB_ENV

    - name: Run npm coverage in changed folders
      run: |
        for folder in ${{ env.changed_folders }}; do
          echo "$folder has changed"
          echo "Running npm coverage in $folder"
          cd $folder
          npm install
          npm run coverage
          cd ..
        done

  check-pr-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check Title Format
        uses: deepakputhraya/action-pr-title@master
        with:
          regex: '^(feat|fix|refactor|docs|test):\s\[\w+-\d+\]\s.+$'
          github_token: ${{ secrets.GITHUB_TOKEN }}
